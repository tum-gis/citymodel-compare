plugins {
    id 'application'
    id 'java-library'
    // id 'com.gradleup.shadow' version '9.1.0'
}

group = "org.tum-gis"
version = "1.0.0"

tasks.named("jar") {
    archiveBaseName.set("citymodel-compare")
    manifest {
        attributes(
                'Main-Class': 'jgraf.app.CityAnalysisApp'
        )
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

repositories {
    maven {
        url = uri("https://repo.maven.apache.org/maven2")
        artifactUrls = [uri("https://repo.osgeo.org/repository/release")]
    }
    maven {
        url = uri("https://repo.osgeo.org/repository/release")
    }
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // https://mvnrepository.com/artifact/org.neo4j/neo4j
    implementation 'org.neo4j:neo4j:5.15.0'

    // https://mvnrepository.com/artifact/com.typesafe/config
    implementation 'com.typesafe:config:1.4.2'

    // https://mvnrepository.com/artifact/uk.co.jemos.podam/podam
    implementation 'uk.co.jemos.podam:podam:7.2.11.RELEASE'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-geometry-core
    implementation 'org.apache.commons:commons-geometry-core:1.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-geometry-euclidean
    implementation 'org.apache.commons:commons-geometry-euclidean:1.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-geometry-spherical
    implementation 'org.apache.commons:commons-geometry-spherical:1.0'

    // https://mvnrepository.com/artifact/org.locationtech.jts/jts-core
    implementation 'org.locationtech.jts:jts-core:1.19.0'

    // https://mvnrepository.com/artifact/org.neo4j/neo4j-bolt
    implementation 'org.neo4j:neo4j-bolt:5.15.0'

    // https://mvnrepository.com/artifact/org.citygml4j/citygml4j-core
    implementation 'org.citygml4j:citygml4j-core:3.0.0'

    // https://mvnrepository.com/artifact/org.citygml4j/citygml4j-xml
    implementation 'org.citygml4j:citygml4j-xml:3.0.0-rc.5'

    // https://mvnrepository.com/artifact/org.citygml4j/citygml4j
    implementation 'org.citygml4j:citygml4j:2.12.1'

    // https://mvnrepository.com/artifact/com.github.davidmoten/rtree
    implementation 'com.github.davidmoten:rtree:0.10'

    // https://central.sonatype.com/artifact/org.openjdk.nashorn/nashorn-core
    implementation 'org.openjdk.nashorn:nashorn-core:15.4'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:1.4.5'

    // Use JUnit Jupiter for testing.
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.13.4"
}

//configurations.all {
//    exclude(group: 'org.slf4j', module: 'slf4j-nop')
//}

configurations.all {
    exclude group: 'org.neo4j', module: 'neo4j-slf4j-provider'
}

application {
    mainClass.set("jgraf.app.CityAnalysisApp")
    applicationDefaultJvmArgs = [
            '-Xms16g', '-Xmx50g',
            '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.lang.ref=ALL-UNNAMED',
             '--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED',
            '--add-opens', 'java.base/java.nio=ALL-UNNAMED',
            '--add-opens', 'java.base/java.io=ALL-UNNAMED',
            '--add-opens', 'java.base/java.time=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util.concurrent=ALL-UNNAMED',
            '--add-opens', 'java.base/jdk.internal.loader=ALL-UNNAMED',
            '--add-opens', 'java.base/jdk.internal.ref=ALL-UNNAMED',
            '--add-opens', 'java.base/sun.net.www.protocol.http=ALL-UNNAMED',
            '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED',
            '-Dlogback.configurationFile=config/logback.xml'
    ]
}

tasks.register('exportCityGMLV2', JavaExec) {
    mainClass = 'jgraf.app.CityGMLExporterV2'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = [
            '-Xms16g', '-Xmx50g',
            '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.lang.ref=ALL-UNNAMED',
            '--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED',
            '--add-opens', 'java.base/java.nio=ALL-UNNAMED',
            '--add-opens', 'java.base/java.io=ALL-UNNAMED',
            '--add-opens', 'java.base/java.time=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util.concurrent=ALL-UNNAMED',
            '--add-opens', 'java.base/jdk.internal.loader=ALL-UNNAMED',
            '--add-opens', 'java.base/jdk.internal.ref=ALL-UNNAMED',
            '--add-opens', 'java.base/sun.net.www.protocol.http=ALL-UNNAMED',
            '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED',
            '-Dlogback.configurationFile=config/logback.xml'
    ]
}

tasks.register('exportCityGMLV3', JavaExec) {
    mainClass = 'jgraf.app.CityGMLExporterV3'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = [
            '-Xms16g', '-Xmx50g',
            '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.lang.ref=ALL-UNNAMED',
            '--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED',
            '--add-opens', 'java.base/java.nio=ALL-UNNAMED',
            '--add-opens', 'java.base/java.io=ALL-UNNAMED',
            '--add-opens', 'java.base/java.time=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util.concurrent=ALL-UNNAMED',
            '--add-opens', 'java.base/jdk.internal.loader=ALL-UNNAMED',
            '--add-opens', 'java.base/jdk.internal.ref=ALL-UNNAMED',
            '--add-opens', 'java.base/sun.net.www.protocol.http=ALL-UNNAMED',
            '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED',
            '-Dlogback.configurationFile=config/logback.xml'
    ]
}

tasks.named('test', Test) {
    useJUnitPlatform()
    jvmArgs = [
            '-Xms16g', '-Xmx50g',
            '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
            '--add-opens', 'java.base/java.lang.ref=ALL-UNNAMED',
            '--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED',
            '--add-opens', 'java.base/java.nio=ALL-UNNAMED',
            '--add-opens', 'java.base/java.io=ALL-UNNAMED',
            '--add-opens', 'java.base/java.time=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util=ALL-UNNAMED',
            '--add-opens', 'java.base/java.util.concurrent=ALL-UNNAMED',
            '--add-opens', 'java.base/jdk.internal.loader=ALL-UNNAMED',
            '--add-opens', 'java.base/jdk.internal.ref=ALL-UNNAMED',
            '--add-opens', 'java.base/sun.net.www.protocol.http=ALL-UNNAMED',
            '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED',
            '-Dlogback.configurationFile=config/logback.xml'
    ]
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-Xlint:none")
    options.release.set(17)
}

//tasks.named("shadowJar") {
//    archiveBaseName.set("citymodel-compare")
//    archiveVersion.set("1.0.0")
//    destinationDirectory.set(project.rootDir)
//    setProperty("zip64", true)
//
//    manifest {
//        attributes('Main-Class': 'jgraf.app.CityAnalysisApp')
//    }
//
//    dependencies {
//        exclude(dependency("org.neo4j:arrow-bom"))
//    }
//
//    // Exclude specific files from the archive
//    exclude('**/META-INF/*.RSA', '**/META-INF/*.SF', '**/META-INF/*.DSA')
//
//    configurations = [project.configurations.runtimeClasspath]
//}
